/***************************************************************************************************************
  * ?? ?? ????selectListTools.js 
  * ??????????????list????????????????????
  * ??????????
  *          1?? moveUp(oSelect,isToTop) ???????????????????????? ????????????list??????????????????
  *                                                                ????????????????????????????????????????
  *          2?? moveDown(oSelect,isToBottom)???????????????????? ????????????list??????????????????
  *                                                                ????????????????????????????????????????
  *          3?? moveSelected(oSourceSel,oTargetSel) ???????????? ????????????????????????
  *          4?? moveAll(oSourceSel,oTargetSel)?????????????????? ????????????????????????????
  *          5?? deleteSelectItem(oSelect) ?????????????????????? ??????????????
  
  
  *          6   isEmail
  *          7   trim  ltrim  rtrim
  *          8   getCursorPos(obj)  setCursorPos(obj,posstart,posend)
  * 
 ****************************************************************************************************************/
function trim(str){  //??????????????????
 return str.replace(/(^\s*)|(\s*$)/g, '');
}
function ltrim(str){  //??????????????
 return str.replace(/(^\s*)/g,'');
}
function rtrim(str){  //??????????????
 return str.replace(/(\s*$)/g,'');
}

//freefalcon//
function getCursorPos(obj) 
{
	obj.focus();
	var currentRange=document.selection.createRange();
	var workRange=currentRange.duplicate();
	
	obj.select();
	var allRange=document.selection.createRange();
	var pos=0;
	
	while(workRange.compareEndPoints("StartToStart",allRange)>0)
	{
	workRange.moveStart("character",-1);
	pos++;
	}
	
	currentRange.select();
	
	return pos;
}
function setCursorPos(obj,posstart,posend)
{
	var rng =obj.createTextRange();	
	rng.collapse(true);		
	rng.moveEnd('character',posend);   
	rng.moveStart('character',posstart);
	rng.select();
}

// ****************************************************************** 
// This function accepts a string variable and verifies if it is in 
// the proper format for an e-mail address or not. 

// The function returns true if the format is valid, false if not. 
// ****************************************************************** 

function isEmail(email) { 
    invalidChars = " ~\'^\`\"*+=\\|][(){}$&!#%/:,;"; 

    // Check for null 
    if (email == "") { 
        return true; 
    } 

    // Check for invalid characters as defined above 
    for (i=0; i<invalidChars.length; i++) { 
        badChar = invalidChars.charAt(i); 
        if (email.indexOf(badChar,0) > -1) { 
            return false; 
        } 
    } 
    lengthOfEmail = email.length; 
    if ((email.charAt(lengthOfEmail - 1) == ".") || (email.charAt(lengthOfEmail - 2) == ".")) { 
        return false; 
    } 
    Pos = email.indexOf("@",1); 
    if (email.charAt(Pos + 1) == ".") { 
        return false; 
    } 
    while ((Pos < lengthOfEmail) && ( Pos != -1)) { 
        Pos = email.indexOf(".",Pos); 
        if (email.charAt(Pos + 1) == ".") { 
            return false; 
        } 
        if (Pos != -1) { 
            Pos++; 
        } 
    } 

    // There must be at least one @ symbol 
    atPos = email.indexOf("@",1); 
    if (atPos == -1) { 
        return false; 
    } 

    // But only ONE @ symbol 
    if (email.indexOf("@",atPos+1) != -1) { 
        return false; 
    } 

    // Also check for at least one period after the @ symbol 
    periodPos = email.indexOf(".",atPos); 
    if (periodPos == -1) { 
        return false; 
    } 
    if (periodPos+3 > email.length) { 
        return false; 
    } 
    return true; 
} 

  
 /**
  * ????????????????
  *
  * oSelect: ????????
  * isToTop: ????????????????????????????????????
  *          true??????????????false????????????false
  */
 function moveUp(oSelect,isToTop)
 {
     //??????????????????????
     if(isToTop == null)
         var isToTop = false;
         
     //??????????------------------------------------------------------------------
     if(oSelect.multiple)
     {
         for(var selIndex=0; selIndex<oSelect.options.length; selIndex++)
         {
             //????????????????????????
             if(isToTop)
             {
                 if(oSelect.options[selIndex].selected)
                 {
                     var transferIndex = selIndex;
                     while(transferIndex > 0 && !oSelect.options[transferIndex - 1].selected)
                     {
                         oSelect.options[transferIndex].swapNode(oSelect.options[transferIndex - 1]);
                         transferIndex --;
                     }
                 }
             }
             //??????????????????????
             else
             {
                 if(oSelect.options[selIndex].selected)
                 {
                     if(selIndex > 0)
                     {
                         if(!oSelect.options[selIndex - 1].selected)
                             oSelect.options[selIndex].swapNode(oSelect.options[selIndex - 1]);
                     }
                 }
             }
         }
     }
     //??????????--------------------------------------------------------------------
     else
     {
         var selIndex = oSelect.selectedIndex;
         if(selIndex <= 0)
             return;
         //????????????????????????
         if(isToTop)
         {
             while(selIndex > 0)
             {
                 oSelect.options[selIndex].swapNode(oSelect.options[selIndex - 1]);
                 selIndex --;
             }
         }
         //??????????????????????
         else        
             oSelect.options[selIndex].swapNode(oSelect.options[selIndex - 1]);
     }
 }

/**
  * ????????????????
  *
  * oSelect: ????????
  * isToTop: ????????????????????????????????????
  *          true??????????????false????????????false
  */
 function moveDown(oSelect,isToBottom)
 {
     //??????????????????????
     if(isToBottom == null)
         var isToBottom = false;
         
     var selLength = oSelect.options.length - 1;
     
     //??????????------------------------------------------------------------------
     if(oSelect.multiple)
     {
         for(var selIndex=oSelect.options.length - 1; selIndex>= 0; selIndex--)
         {
             //????????????????????????
             if(isToBottom)
             {
                 if(oSelect.options[selIndex].selected)
                 {
                     var transferIndex = selIndex;
                     while(transferIndex < selLength && !oSelect.options[transferIndex + 1].selected)
                     {
                         oSelect.options[transferIndex].swapNode(oSelect.options[transferIndex + 1]);
                         transferIndex ++;
                     }
                 }
             }
             //??????????????????????
             else
             {
                 if(oSelect.options[selIndex].selected)
                 {
                     if(selIndex < selLength)
                     {
                         if(!oSelect.options[selIndex + 1].selected)
                             oSelect.options[selIndex].swapNode(oSelect.options[selIndex + 1]);
                     }
                 }
             }
         }
     }
     //??????????--------------------------------------------------------------------
     else
     {
         var selIndex = oSelect.selectedIndex;
         if(selIndex >= selLength - 1)
             return;
         //????????????????????????
         if(isToBottom)
         {
             while(selIndex < selLength - 1)
             {
                 oSelect.options[selIndex].swapNode(oSelect.options[selIndex + 1]);
                 selIndex ++;
             }
         }
         //??????????????????????
         else        
             oSelect.options[selIndex].swapNode(oSelect.options[selIndex + 1]);
     }
 }

/**
  * ????select??????????,????????value??????????value??????????????
  *
  * oSourceSel: ???????????? 
  * oTargetSel: ??????????????
  */
 function moveSelected(oSourceSel,oTargetSel)
 {
     //????????value??text??????????
     var arrSelValue = new Array();
     var arrSelText = new Array();
     //????????????????options????value??????
     var arrValueTextRelation = new Array();
     var index = 0;//????????????????????
     
     //????????????????????????????????????????value??????option??????????
     for(var i=0; i<oSourceSel.options.length; i++)
     {
         if(oSourceSel.options[i].selected)
         {
             //????
             arrSelValue[index] = oSourceSel.options[i].value;
             arrSelText[index] = oSourceSel.options[i].text;
             //????value??????option??????????
             arrValueTextRelation[arrSelValue[index]] = oSourceSel.options[i];
             index ++;
         }
     }
     
     //??????????????????????????????????????????????????????
     for(var i=0; i<arrSelText.length; i++)  
     {
         //????
         var oOption = document.createElement("option");
         oOption.text = arrSelText[i];
         oOption.value = arrSelValue[i];
         oTargetSel.add(oOption);
         //??????????????????????
         oSourceSel.removeChild(arrValueTextRelation[arrSelValue[i]]);
     }
 }

/**
  * ????select??????????
  *
  * oSourceSel: ???????????? 
  * oTargetSel: ??????????????
  */
 function moveAll(oSourceSel,oTargetSel)
 {
     //????????value??text??????????
     var arrSelValue = new Array();
     var arrSelText = new Array();
     
     //??????????????????????????????
     for(var i=0; i<oSourceSel.options.length; i++)
     {
         arrSelValue[i] = oSourceSel.options[i].value;
         arrSelText[i] = oSourceSel.options[i].text;
     }
     
     //??????????????????????????select??
     for(var i=0; i<arrSelText.length; i++)  
     {
         var oOption = document.createElement("option");
         oOption.text = arrSelText[i];
         oOption.value = arrSelValue[i];
         oTargetSel.add(oOption);
     }
     
     //??????????????????????????
     oSourceSel.innerHTML = "";
 }

/**
  * ????????????
  *
  * oSelect: ???????????? 
  */
 function deleteSelectItem(oSelect)
 {
     for(var i=0; i<oSelect.options.length; i++)
     {
         if(i>=0 && i<=oSelect.options.length-1 && oSelect.options[i].selected)
         {
             oSelect.options[i] = null;
             i --;
         }
     }
 }
 
 //????????
 function judgeMove()
 {
     var arrRadio = document.all.ifAll;
     var valOfRadio;
     for(var i=0; i<arrRadio.length; i++)
     {
         if(arrRadio[i].checked)
         {
             valOfRadio = arrRadio[i].value;
             break;
         }
     }
     if(valOfRadio == "left")
         moveAll(document.all.right,document.all.left);
     if(valOfRadio == "right")
         moveAll(document.all.left,document.all.right);
 }
 
 
 